grammar ZmeiLanguage;

/*
 * Parser Rules
 */
col_file: NEWLINE* pages? NEWLINE* EOF;

/*
 * Pages
 */
pages: page+ ;
page: page_header NEWLINE page_field*;

page_header : '[' page_name ']' ;
page_name : PAGE_NAME;

page_field: FIELD_LABEL COLON PYTHON_EXPRESSION;


/*
 * Collection
 */
collections : collection+;
collection : collection_name COLLECTION_HEADER_SEPARATOR NEWLINE col_field+;
collection_name: COLLECTION_NAME;
col_field: FIELD_LABEL (COLON TYPE_NAME)?;

COLON : ':' ;

TYPE_NAME: 'text'
         | 'int'
         ;

COLLECTION_HEADER_SEPARATOR: '\n-' '-'+ ;


fragment ID : [a-zA-Z_] [a-zA-Z_0-9]*;

FIELD_LABEL: '\n' ID;
COLLECTION_NAME: '\n#' ID ':';

PAGE_NAME: [a-z]+;


NEWLINE             : ('\r'? '\n' | '\r');

PYTHON_EXPRESSION : (~'\n')+;


WHITESPACE : ' ' -> channel(HIDDEN) ;

/** "catch all" rule for any char not matche in a token rule of your
*  grammar. Lexers in Intellij must return all tokens good and bad.
*  There must be a token to cover all characters, which makes sense, for
*  an IDE. The parser however should not see these bad tokens because
*  it just confuses the issue. Hence, the hidden channel.
*/
ERRCHAR
    :	.	-> channel(HIDDEN)
    ;